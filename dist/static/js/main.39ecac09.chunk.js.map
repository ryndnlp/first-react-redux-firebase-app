{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","Navbar","sidenav","document","querySelector","M","Sidenav","init","this","links","uid","sideLinks","data-target","id","React","Component","state","firebase","Notifications","renderNotifications","notifications","map","notif","key","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","renderProjectSummary","Dashboard","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","doc","authError","signIn","creds","credential","signInWithEmailAndPassword","email","password","catch","err","useState","formData","setFormData","handleChange","e","target","value","onSubmit","preventDefault","htmlFor","onChange","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","set","firstName","lastName","createProject","add","authorId","Date","history","push","App","path","component","exact","ProjectDetails","SignIn","SignUp","CreateProject","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.39ecac09.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authAction';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return(\r\n        <ul className=\"right hide-on-med-and-down\">\r\n            <li>\r\n                <NavLink to='/create'>New Project</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to= '/signin' onClick={props.signOut}>Log Out</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/' className='btn btn-floating orange'>{props.profile.initials}</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credential) => {\r\n    return(dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credential.email,\r\n            credential.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return(dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => dispatch({type: 'LOGOUT_SUCCESS'}))\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return(dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n        .then((res) => {\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n        <ul className=\"right hide-on-med-and-down\">\r\n            <li>\r\n                <NavLink to='/signup'>Sign Up</NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to='/signin'>Log In</NavLink>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\nimport M from  'materialize-css/dist/js/materialize.min.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { signOut } from '../../store/actions/authAction';\r\n\r\nclass Navbar extends React.Component {\r\n    componentDidMount() {\r\n        let sidenav = document.querySelector('#mobile-demo');\r\n        M.Sidenav.init(sidenav, {});\r\n    } \r\n    render(){\r\n        const { auth, profile } = this.props;\r\n        const links = auth.uid? <SignedInLinks profile={profile}/>: <SignedOutLinks />;\r\n        const sideLinks = auth.uid? (\r\n            <div>\r\n                <li><Link to='/create'>New Project</Link></li>\r\n                <li><Link to= '/signin' onClick={this.props.signOut}>Log Out</Link></li>\r\n            </div>\r\n        ) : (\r\n            <div>\r\n                <li><Link to='/signup'>Sign Up</Link></li>\r\n                <li><Link to='/signin'>Log In</Link></li>\r\n            </div>\r\n        );\r\n        return(\r\n            <div>\r\n                <nav className=\"blue\">\r\n                    <div className=\"nav-wrapper container\">\r\n                        <Link to='#' data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></Link>\r\n                        <Link to='/' className=\"brand-logo\">React App</Link>    \r\n                        { links }\r\n                    </div>\r\n                </nav>\r\n                <ul className=\"sidenav\" id=\"mobile-demo\">\r\n                    { sideLinks }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }   \r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const renderNotifications = props.notifications && props.notifications.map(notif => \r\n        <li key={notif.id}>\r\n            <span className=\"purple-text\">{notif.user}</span>\r\n            <span> {notif.content}</span>\r\n            <div className=\"grey-text note-date\">\r\n                {moment(notif.time.toDate()).fromNow()}\r\n            </div>\r\n        </li>\r\n    )\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {renderNotifications}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">\r\n                    {project.title}\r\n                </span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    const renderProjectSummary = projects && projects.map(project => \r\n        <Link to={`/project/${project.id}`} key={project.id}>\r\n            <ProjectSummary project={project}  />\r\n        </Link>\r\n    );\r\n    return(\r\n        <div className=\"project-list section\">\r\n            {renderProjectSummary}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectList;","import React from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../project/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends React.Component{\r\n    render(){\r\n        const {projects, auth, notifications} = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        projects: state.firestore.ordered && state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered && state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection:'projects', orderBy: ['createdAt', 'desc'], limit: 10},\r\n        { collection:'notifications', orderBy: ['time', 'desc'], limit: 5}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project } = props;\r\n    const id = props.match.params.id;\r\n    if(project){\r\n        return(\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">\r\n                            {project.title} - {id}\r\n                        </span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <div className=\"container center\">\r\n                <p>Loading project</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    return{\r\n        project: state.firestore.data.projects && state.firestore.data.projects[id]\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps), \r\n    firestoreConnect(props => [{collection: 'projects', doc: props.match.params.id}])\r\n)(ProjectDetails);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authAction';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction SignIn(props){\r\n    const initialFormData = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    const [formData, setFormData] = useState(initialFormData);\r\n\r\n    const handleChange = e => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        props.signIn(formData);\r\n    }\r\n    if(props.auth.uid){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <form className=\"white\" onSubmit={handleSubmit}>\r\n                <h5 className=\"grey-text\">Log In</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Pasword</label>\r\n                    <input type=\"password\" id=\"password\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn orange darken-3 z-depth-0\">Login</button>\r\n                    <div className=\"red-text center\">\r\n                        {props.authError? <p>{props.authError}</p>: null}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authAction';\r\n\r\nfunction SignUp(props){\r\n    const initialFormData = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    const [formData, setFormData] = useState(initialFormData);\r\n\r\n    const handleChange = e => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        props.signUp(formData);\r\n    }\r\n    if(props.auth.uid){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <form className=\"white\" onSubmit={handleSubmit}>\r\n                <h5 className=\"grey-text\">Sign Up</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" id=\"email\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"password\">Pasword</label>\r\n                    <input type=\"password\" id=\"password\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"firstName\">First Name</label>\r\n                    <input type=\"text\" id=\"firstName\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"lastName\">Last Name</label>\r\n                    <input type=\"text\" id=\"lastName\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn orange darken-3 z-depth-0\">Sign Up</button>\r\n                    <div className=\"red-text center\">\r\n                        {props.authError? <p>{props.authError}</p>: null}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        signUp: (newUser) => {\r\n            dispatch(signUp(newUser))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectAction';\r\n\r\nfunction CreateProject(props){\r\n    const initialFormData = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    const handleChange = e => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        props.createProject(formData);\r\n        props.history.push('/');\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <form className=\"white\" onSubmit={handleSubmit}>\r\n                <h5 className=\"grey-text\">Create New Project</h5>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <label htmlFor=\"content\">Content</label>\r\n                    <textarea className=\"materialize-textarea\" id='content' onChange={handleChange}></textarea>\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <button className=\"btn orange darken-3 z-depth-0\">Create</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: project => {\r\n            dispatch(createProject(project));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null , mapDispatchToProps)(CreateProject);","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //Post to DB\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const uid = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: uid,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT', project});\r\n        }).catch((err) => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\r\n        })\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/project/CreateProject';\nimport 'materialize-css/dist/css/materialize.min.css';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Navbar />\n                <Switch>\n                    <Route path='/' component={Dashboard} exact></Route>\n                    <Route path='/project/:id' component={ProjectDetails}></Route>\n                    <Route path='/signin' component={SignIn}></Route>\n                    <Route path='/signup' component={SignUp}></Route>\n                    <Route path='/create' component={CreateProject}></Route>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    if(action.type === 'LOGIN_SUCCESS'){\r\n        //console.log('Login success');\r\n        return{\r\n            ...state,\r\n            authError: null\r\n        }\r\n    }else if(action.type === 'LOGIN_ERROR'){\r\n        //console.log('Login error');\r\n        return{\r\n            ...state,\r\n            authError: 'Login failed'\r\n        }\r\n    }else if(action.type === 'LOGOUT_SUCCESS'){\r\n        //console.log('Logout success');\r\n    }else if(action.type === 'SIGNUP_SUCCESS'){\r\n        //console.log('Signup sucess');\r\n        return {\r\n            ...state,\r\n            authError: null\r\n        }\r\n    }else if(action.type === 'SIGNUP_ERROR'){\r\n        //console.log('Signup error');\r\n        return {\r\n            ...state,\r\n            authError: action.err.message\r\n        }\r\n    }\r\n    return state;\r\n}\r\nexport default authReducer;","const initState = {\r\n    \r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    if(action.type === 'CREATE_PROJECT'){\r\n        //console.log('Created', action.project);\r\n    }else if(action.type === 'CREATE_PROJECT_ERROR'){\r\n        //console.log('Error', action.err);\r\n    }\r\n    return state;\r\n}\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCniMyv9czca0bl2bnznQDgOTNLjgOASXE\",\r\n    authDomain: \"react-project-8c143.firebaseapp.com\",\r\n    databaseURL: \"https://react-project-8c143.firebaseio.com\",\r\n    projectId: \"react-project-8c143\",\r\n    storageBucket: \"react-project-8c143.appspot.com\",\r\n    messagingSenderId: \"990710993778\",\r\n    appId: \"1:990710993778:web:835d2afa80d509db2ac3eb\",\r\n    measurementId: \"G-QB6BDHHR1T\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n// firebase.analytics();\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\nimport { useSelector  } from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase';\n\n\nconst store = createStore(rootReducer, \n    compose(applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    )\n);\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true\n}\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n};\n\nfunction AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div className=\"center\">Loading Screen...</div>;\n    return children;\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <AuthIsLoaded>\n                <App />\n            </AuthIsLoaded>\n        </ReactReduxFirebaseProvider>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}